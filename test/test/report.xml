<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="15" time="0.613" timestamp="2024-05-03T15:03:50.887780" hostname="OMKARKO-W10"><testcase classname="newspaper_test" name="test_get_home_success" time="0.010" /><testcase classname="newspaper_test" name="test_get_sports_success" time="0.007" /><testcase classname="newspaper_test" name="test_get_political_success" time="0.006" /><testcase classname="newspaper_test" name="test_get_home_invalid_route" time="0.006" /><testcase classname="newspaper_test" name="test_get_sports_invalid_route" time="0.006" /><testcase classname="newspaper_test" name="test_get_political_invalid_route" time="0.006" /><testcase classname="newspaper_test" name="test_get_home_empty_response" time="0.009"><failure message="AssertionError: assert not {'articles': [{'content': 'Moon Holds More Water Ice Than Expected, Especially at North Pole.', 'id': 1, 'title': 'Bre... interest rate concerns for Indian investors.', 'id': 3, 'title': 'Political: Powell talks about the interest rate.'}]}&#10; +  where {'articles': [{'content': 'Moon Holds More Water Ice Than Expected, Especially at North Pole.', 'id': 1, 'title': 'Bre... interest rate concerns for Indian investors.', 'id': 3, 'title': 'Political: Powell talks about the interest rate.'}]} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;()&#10; +    where &lt;bound method Response.json of &lt;Response [200]&gt;&gt; = &lt;Response [200]&gt;.json">def test_get_home_empty_response():
        response = requests.get(API_URL_HOME)
        assert response.status_code == 200
&gt;       assert not response.json()
E       AssertionError: assert not {'articles': [{'content': 'Moon Holds More Water Ice Than Expected, Especially at North Pole.', 'id': 1, 'title': 'Bre... interest rate concerns for Indian investors.', 'id': 3, 'title': 'Political: Powell talks about the interest rate.'}]}
E        +  where {'articles': [{'content': 'Moon Holds More Water Ice Than Expected, Especially at North Pole.', 'id': 1, 'title': 'Bre... interest rate concerns for Indian investors.', 'id': 3, 'title': 'Political: Powell talks about the interest rate.'}]} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;()
E        +    where &lt;bound method Response.json of &lt;Response [200]&gt;&gt; = &lt;Response [200]&gt;.json

newspaper_test.py:47: AssertionError</failure></testcase><testcase classname="newspaper_test" name="test_get_sports_empty_response" time="0.007"><failure message="AssertionError: assert not {'articles': [{'content': 'Real Madrid and Liverpool will face off in the Champions League final this Saturday. Both t...ircuit for drivers, making for an unforgettable event.', 'id': 5, 'title': 'Formula 1: Monaco Grand Prix Highlights'}]}&#10; +  where {'articles': [{'content': 'Real Madrid and Liverpool will face off in the Champions League final this Saturday. Both t...ircuit for drivers, making for an unforgettable event.', 'id': 5, 'title': 'Formula 1: Monaco Grand Prix Highlights'}]} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;()&#10; +    where &lt;bound method Response.json of &lt;Response [200]&gt;&gt; = &lt;Response [200]&gt;.json">def test_get_sports_empty_response():
        response = requests.get(API_URL_SPORTS)
        assert response.status_code == 200
&gt;       assert not response.json()
E       AssertionError: assert not {'articles': [{'content': 'Real Madrid and Liverpool will face off in the Champions League final this Saturday. Both t...ircuit for drivers, making for an unforgettable event.', 'id': 5, 'title': 'Formula 1: Monaco Grand Prix Highlights'}]}
E        +  where {'articles': [{'content': 'Real Madrid and Liverpool will face off in the Champions League final this Saturday. Both t...ircuit for drivers, making for an unforgettable event.', 'id': 5, 'title': 'Formula 1: Monaco Grand Prix Highlights'}]} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;()
E        +    where &lt;bound method Response.json of &lt;Response [200]&gt;&gt; = &lt;Response [200]&gt;.json

newspaper_test.py:53: AssertionError</failure></testcase><testcase classname="newspaper_test" name="test_get_political_empty_response" time="0.008"><failure message="AssertionError: assert not {'articles': [{'content': 'The top U.S. intelligence official warned Congress of an alarming rise in cyberattacks at a...rican banks at Fitch Ratings, told CNBC.', 'id': 3, 'title': 'Why hundreds of U.S. banks may be at risk of failure.'}]}&#10; +  where {'articles': [{'content': 'The top U.S. intelligence official warned Congress of an alarming rise in cyberattacks at a...rican banks at Fitch Ratings, told CNBC.', 'id': 3, 'title': 'Why hundreds of U.S. banks may be at risk of failure.'}]} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;()&#10; +    where &lt;bound method Response.json of &lt;Response [200]&gt;&gt; = &lt;Response [200]&gt;.json">def test_get_political_empty_response():
        response = requests.get(API_URL_POLITICAL)
        assert response.status_code == 200
&gt;       assert not response.json()
E       AssertionError: assert not {'articles': [{'content': 'The top U.S. intelligence official warned Congress of an alarming rise in cyberattacks at a...rican banks at Fitch Ratings, told CNBC.', 'id': 3, 'title': 'Why hundreds of U.S. banks may be at risk of failure.'}]}
E        +  where {'articles': [{'content': 'The top U.S. intelligence official warned Congress of an alarming rise in cyberattacks at a...rican banks at Fitch Ratings, told CNBC.', 'id': 3, 'title': 'Why hundreds of U.S. banks may be at risk of failure.'}]} = &lt;bound method Response.json of &lt;Response [200]&gt;&gt;()
E        +    where &lt;bound method Response.json of &lt;Response [200]&gt;&gt; = &lt;Response [200]&gt;.json

newspaper_test.py:59: AssertionError</failure></testcase><testcase classname="newspaper_test" name="test_get_home_invalid_method" time="0.007" /><testcase classname="newspaper_test" name="test_get_sports_invalid_method" time="0.043" /><testcase classname="newspaper_test" name="test_get_political_invalid_method" time="0.008" /><testcase classname="newspaper_test" name="test_get_home_valid_data" time="0.006" /><testcase classname="newspaper_test" name="test_get_sports_valid_data" time="0.006" /><testcase classname="newspaper_test" name="test_get_political_valid_data" time="0.007" /></testsuite></testsuites>